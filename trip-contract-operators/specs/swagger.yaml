info:
  version: 0.0.1
  title: trip-contract-operators
paths:
  '/voyages/{id}':
    x-swagger-router-controller: voyages
    get:
      tags:
        - voyages
      description: Get voyage object by client id.
      operationId: getVoyageById
      parameters:
        - name: id
          in: path
          description: The voyage id of a voyage object.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VoyageObject'
        '403':
          description: Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
      consumes:
        - application/json
      produces:
        - application/json
    put:
      tags:
        - voyages
      description: Update voyage object by client id.
      operationId: updateVoyageById
      parameters:
        - name: id
          in: path
          description: The voyage id of a voyage object.
          required: true
          type: string
        - description: The object contains voyage request.
          name: body
          in: body
          schema:
            $ref: '#/definitions/VoyageObject'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VoyageObject'
        '403':
          description: Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
      consumes:
        - application/json
      produces:
        - application/json
    delete:
      tags:
        - voyages
      description: Delete the voyage object by client id. All the voyages will be deleted forever.
      operationId: deleteVoyagesById
      parameters:
        - name: id
          in: path
          description: The client id of a voyage object.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VoyageObject'
        '403':
          description: Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
      consumes:
        - application/json
      produces:
        - application/json
  /voyages:
    x-swagger-router-controller: voyages
    get:
      tags:
        - voyages
      description: Get voyages object by client id.
      operationId: getVoyages
      parameters:
        - name: name
          in: query
          description: The voyage name of a voyage object.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VoyageObjects'
        '403':
          description: Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
      consumes:
        - application/json
      produces:
        - application/json
    post:
      tags:
        - voyages
      description: Create voyage object bases on voyage id.
      operationId: createVoyages
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/VoyageObjects'
        '403':
          description: Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-code-samples:
        - lang: NodeJS
          source: |
            var request = require('request');
            function createVoyages(certRequest) {
              return new Promise((resolve, reject) => {
                request.post({
                  'url': 'http://localhost:6004/voyages/clients',
                  'json': certRequest
                }, ((error, response, body) => {
                  error? reject(error): resolve(body);
                }));
              });
            }
            createVoyages({
              'client_id': 1307,
              'password': 'secret123456'
            }).then((data) => {
              console.log(data);
            }, (error) => {
              console.error(error);
            })
        - lang: CURL
          source: |
            curl -X POST --header 'Content-Type: application/json' --header 'Accept: text/html' -d '{"client_id": 1307,"password": "secret123456"}' 'http://localhost:6004/voyages/clients'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: The object contains voyage request.
          required: true
          name: body
          in: body
          schema:
            $ref: '#/definitions/VoyageObject'
swagger: '2.0'
definitions:
  x-any:
    properties: {}
  StationStop:
    description: A concept named StationStop
    properties:
      $class:
        default: org.tripcontract.network.StationStop
        description: The class identifier for this type
        type: string
      depatureTime:
        type: string
        format: date-time
      arrivalTime:
        type: string
        format: date-time
      stopStatus:
        enum:
          - RESERVED
          - ONTIME
          - DELAYED
          - PASSED
          - ARRIVING
          - WAITING
          - CLOSED
        type: string
      parkinglot:
        $ref: '#/definitions/x-any'
      stationId:
        type: string
      stationAddress:
        type: string
      stationName:
        type: string
      id:
        type: string
    required:
      - depatureTime
      - arrivalTime
      - stopStatus
      - stationId
      - stationAddress
      - stationName
  VoyageObject:
    description: An asset named Voyage
    properties:
      $class:
        default: org.tripcontract.network.Voyage
        description: The class identifier for this type
        type: string
      voyageId:
        description: The instance identifier for this type
        type: string
      voyageName:
        type: string
      voyageDesc:
        type: string
      costPerPerson:
        type: number
        format: double
      estimatedDistance:
        type: number
        format: double
      estimatedMinutes:
        type: number
        format: double
      stationStops:
        type: array
        items:
          $ref: '#/definitions/StationStop'
      voyageStatus:
        enum:
          - CREATED
          - ACTIVATED
          - DEACTIVATED
          - VIN_ASSIGNED
          - DRV_ASSIGNED
          - STARTED
          - CANCELLED
          - FINISHED
        type: string
      vehicle:
        description: The identifier of an instance of vehicle
        $ref: '#/definitions/x-any'
      driver:
        description: The identifier of an instance of driver
        $ref: '#/definitions/x-any'
      operator:
        description: The identifier of an instance of operator
        $ref: '#/definitions/x-any'
    required:
      - voyageId
      - voyageName
      - costPerPerson
      - estimatedDistance
      - estimatedMinutes
      - voyageStatus
      - operator
  VoyageObjects:
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/VoyageObject'
  ErrorResponse:
    required:
      - code
    properties:
      code:
        type: string
      message:
        type: string
x-components: {}
